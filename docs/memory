Memoria
-------

En este documento, se registrará la evolución en el desarrollo del juego Master Mind, comenzando con una primera versión sin conocimiento en profundidad de diseño de software.
A partir de esta primera versión, se irán aplicando los distintos conceptos estudiados durante las clases.

Primera versión
~~~~~~~~~~~~~~~

image:img/uml.png["uml"]

En esta primera versión, definimos 3 clases:


- color. Se encarga de definir un color, que más adelante formará las secuencias. Más adelante podría incorporar más información y funcionalidades, como guardar el código hexadecimal de su color.
- solution. Genera la combinación de colores que da la victoria. Además comprueba las respuestas del jugador.
- game. Define el curso del juego, incluyendo en ello sus iteraciones o la opción de volver a jugar.


Segunda versión
~~~~~~~~~~~~~~~

image:img/uml_2.png["uml 2"]

1. El primer cambio realizado en esta versión es la eliminación de la clase color. Esta clase fue creada con la suposición de que un color desempeñaría más funciones en un futuro, por lo que estaría cometiendo una generalidad especulativa. Esta clase es sustituida por simples caracteres.
2. El siguiente cambio es un pequeño añadido que faltó a la primera versión, el registro del tablero. Esta funcionalidad es añadida a la clase game.
3. En el constructor de la clase solution, se usaba una variable temporal denominada "temp" para  encontrar posibles asignaciones a la solución del juego. Esta variable local ha sido sustituida por una más descriptiva: "posibleValueAssignment".
4. En el método turn() de la clase game, se definía un array "winCondition" que finalmente no era utilizado y por tanto es código muerto. Este array es eliminado

Tercera versión
~~~~~~~~~~~~~~~
image:img/uml_3.png["uml 3"]

Cuarta versión
~~~~~~~~~~~~~~
image:img/uml_4.png["uml 4"]

Quinta versión
~~~~~~~~~~~~~~
image:img/uml_5.png["uml 5"]